<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<!-- dev.mvc.stu.StuDAOInter 패키지에 등록된 interface 명시,
      패키지명과 인터페이스명은 실제로 존재해야함,
      Spring이 내부적으로 자동으로 interface를 구현해줌. -->
<mapper namespace="dev.mvc.stu.StuDAOInter">
  <!-- 
  insert: INSERT SQL 실행
  id: Spring에서 호출시 사용
  parameterType: 전달받는 데이터 객체의 타입
  return: 등록한 레코드 갯수 리턴
  SQL선언시 ';'은 삭제
  #{}: ? 동일
  #{name}: public String getName() 자동 호출
   --> 
  <insert id="create" parameterType="dev.mvc.stu.StuVO">
    INSERT INTO stu(stugrpno, name, stuex, stulo, rdate, cnt)
    VALUES(#{stugrpno}, #{name}, #{stuex}, #{stulo}, NOW(), 0)
  </insert> 
 
 <!--[27][Stu] Stugrp 전체 목록 출력 기능 제작(SELECT ~ FROM ~ ORDER BY ~), 등록과 목록이 결합된 화면 제작
      전체 목록(JOIN 사용 X)
      레코드 갯수 만큼 StugrpVO 객체를 만들어 ArrayList에 저장하여 리턴,
   -->
  <select id="list_all" resultType="dev.mvc.stu.StuVO">
    SELECT stuno, stugrpno, name, stuex, stulo, rdate, cnt
    FROM stu
    ORDER BY stugrpno ASC
  </select>  
 
   <!--  [28]_스터디 그룹별 목록
  정수를 전달받기에 result = int -> but VO를 return하기에 parameter 타입을 int로 설정
  stugrpno는 입력받기에 #{값} -->
  <select id="list_by_stugrpno" resultType="dev.mvc.stu.StuVO" parameterType="int">
    SELECT stuno, stugrpno, name, stuex, stulo, rdate, cnt
    FROM stu
    WHERE stugrpno = #{stugrpno}
    ORDER BY stuno ASC
  </select>
  
  <!-- [29] join 목적 -->
  <select id="list_all_join" resultType="dev.mvc.stu.Stugrp_StuVO">
    SELECT r.stugrpno AS r_stugrpno, r.stugrpname,
         c.stuno, c.stugrpno, c.name, c.stuex, c.stulo, c.rdate, c.cnt
    FROM stugrp r, stu c
    WHERE r.stugrpno = c.stugrpno
    ORDER BY stugrpno ASC, stuno ASC
  </select>
  
    <!-- [30][Stu] Stu 조회 + 수정폼, 수정 처리 기능의 제작(UPDATE ~ SET ~ WHERE ~ )
  조회, id: read, 입력: stuno, 리턴: StuVO -->
  <select id="read" resultType="dev.mvc.stu.StuVO" parameterType="int">
    SELECT stuno, stugrpno, name, stuex, stulo, rdate, cnt
    FROM stu
    WHERE stuno = #{stuno }
  </select>    

  <!-- [30][Stu] Stu 조회 + 수정폼, 수정 처리 기능의 제작(UPDATE ~ SET ~ WHERE ~ )
  조회, id: read, 입력: stuno, 리턴: StuVO -->
  <update id="update" parameterType="dev.mvc.stu.StuVO">
    UPDATE stu
    SET stugrpno=#{stugrpno}, name=#{name}, stuex=#{stuex}, stulo=#{stulo} , cnt=#{cnt}
    WHERE stuno = #{stuno}
  </update>  
  
    <!-- [31][fav] fav 삭제 기능의 제작(DELETE ~ WHERE~)
  삭제, return: int -->
  <delete id="delete" parameterType="int">
    DELETE FROM stu
    WHERE stuno=#{stuno}
  </delete>  
 
  <!-- 스터디 그룹에 속한 레코드 갯수 산출 -->
  <select id="count_by_stugrpno" resultType="int" parameterType="int">
    SELECT COUNT(*) AS cnt 
    FROM stu 
    WHERE stugrpno=#{stugrpno}
  </select>
    
    <!--stugrpno가 같은 모든 레코드 삭제 -->
  <delete id="delete_by_stugrpno" parameterType="int">
    DELETE FROM stu
    WHERE stugrpno=#{stugrpno}
  </delete>    
  
</mapper>