<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<!-- dev.mvc.fav.FavDAOInter 패키지에 등록된 interface 명시,
      패키지명과 인터페이스명은 실제로 존재해야함,
      Spring이 내부적으로 자동으로 interface를 구현해줌. -->
<mapper namespace="dev.mvc.fav.FavDAOInter">
  <!-- 
  insert: INSERT SQL 실행
  id: Spring에서 호출시 사용
  parameterType: 전달받는 데이터 객체의 타입
  return: 등록한 레코드 갯수 리턴
  SQL선언시 ';'은 삭제
  #{}: ? 동일
  #{name}: public String getName() 자동 호출
   --> 
  <insert id="create" parameterType="dev.mvc.fav.FavVO">
    INSERT INTO fav(favgrpno, favname, favex, favli, rdate)
    VALUES(#{favgrpno}, #{favname}, #{favex}, #{favli}, NOW())
  </insert> 
 
 <!--[27][Fav] Favgrp 전체 목록 출력 기능 제작(SELECT ~ FROM ~ ORDER BY ~), 등록과 목록이 결합된 화면 제작
      전체 목록(JOIN 사용 X)
      레코드 갯수 만큼 FavgrpVO 객체를 만들어 ArrayList에 저장하여 리턴,
   -->
  <select id="list_all" resultType="dev.mvc.fav.FavVO">
    SELECT favno, favgrpno, favname, favex, favli, rdate
    FROM fav
    ORDER BY favgrpno ASC
  </select> 
  
   <!--  [28]_즐겨찾기 그룹별 목록
  정수를 전달받기에 result = int -> but VO를 return하기에 parameter 타입을 int로 설정
  favgrpno는 입력받기에 #{값} -->
  <select id="list_by_favgrpno" resultType="dev.mvc.fav.FavVO" parameterType="int">
    SELECT favno, favgrpno, favname, favex, favli, rdate
    FROM fav
    WHERE favgrpno = #{favgrpno}
    ORDER BY favno ASC
  </select>    
  
  <!--[29] join 목적  -->
  <select id="list_all_join" resultType="dev.mvc.fav.Favgrp_FavVO">
    SELECT r.favgrpno AS r_favgrpno, r.favgrpname,
               c.favno, c.favgrpno, c.favname, c.favex, c.favli, c.rdate
    FROM favgrp r, fav c
    WHERE r.favgrpno = c.favgrpno
    ORDER BY favgrpno ASC, favno ASC
  </select>  
  
  <!-- [30][Fav] Fav 조회 + 수정폼, 수정 처리 기능의 제작(UPDATE ~ SET ~ WHERE ~ )
  조회, id: read, 입력: favno, 리턴: FavVO -->
  <select id="read" resultType="dev.mvc.fav.FavVO" parameterType="int">
    SELECT favno, favgrpno, favname, favex, favli, rdate
    FROM fav
    WHERE favno = #{favno }
  </select>    

  <!-- [30][Fav] Fav 조회 + 수정폼, 수정 처리 기능의 제작(UPDATE ~ SET ~ WHERE ~ )
  조회, id: read, 입력: favno, 리턴: FavVO -->
  <update id="update" parameterType="dev.mvc.fav.FavVO">
    UPDATE fav
    SET favgrpno=#{favgrpno}, favname=#{favname}, favex=#{favex}, favli=#{favli}
    WHERE favno = #{favno}
  </update>  

  <!-- [31][fav] fav 삭제 기능의 제작(DELETE ~ WHERE~)
  삭제, return: int -->
  <delete id="delete" parameterType="int">
    DELETE FROM fav
    WHERE favno=#{favno}
  </delete>  

</mapper>