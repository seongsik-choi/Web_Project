<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace = "dev.mvc.member.MemberDAOInter">
  
  <!-- [53][Member] 중복 ID 체크(DAO interface, DAO class, Processs interface, Process class) -->
  <select id="checkID" resultType="int" parameterType="String">
    SELECT COUNT(id) as cnt
    FROM member
    WHERE id=#{id}
  </select>
  
  <!-- [53][Member] 중복 EMAIL 체크(DAO interface, DAO class, Processs interface, Process class) -->
  <select id="checkEMAIL" resultType="int" parameterType="String">
    SELECT COUNT(email) as cnt
    FROM member
    WHERE email=#{email}
  </select>  
  
  <!-- [53][Member] 중복 별명(vname) 체크(DAO interface, DAO class, Processs interface, Process class) -->
  <select id="checkVNAME" resultType="int" parameterType="String">
    SELECT COUNT(vname) as cnt
    FROM member
    WHERE vname=#{vname}
  </select>    

  <!--  [55][Member] 회원 가입 처리, create_msg.jsp, 메시지 처리 콘트롤러, msg.do 구현-->
  <insert id="create" parameterType="dev.mvc.member.MemberVO">
    INSERT INTO member(id, passwd, mname, tel, zipcode, address1, address2, mdate, grade,
                                      email, vname, job, file1, file1saved, thumb1, size1)
    VALUES (#{id}, #{passwd}, #{mname}, #{tel}, #{zipcode}, 
                 #{address1}, #{address2}, NOW(), #{grade}, #{email}, #{vname}, #{job}, 
                 #{file1}, #{file1saved}, #{thumb1}, #{size1})
  </insert>

  <!-- [56][Member] 회원 목록 출력 기능 제작, passwd는 출력 no-->
  <select id="list" resultType="dev.mvc.member.MemberVO">
    SELECT memberno, id, passwd, mname, tel, zipcode, address1, address2, mdate, grade,
                email, vname, job, file1, file1saved, thumb1, size1
    FROM member
    ORDER BY memberno ASC
  </select>  
  
  <!-- [57][Member] 회원 조회(수정 폼) 기능 제작 - memberno로 회원 정보 조회 -->
  <select id="read" resultType="dev.mvc.member.MemberVO" parameterType="int">
    SELECT memberno, id, passwd, mname, tel, zipcode, address1, address2, mdate, grade,
                email, vname, job, file1, file1saved, thumb1, size1
    FROM member
    WHERE memberno = #{memberno}
  </select>  

  <!-- [57][Member] 회원 조회(수정 폼) 기능 제작-  id로 회원 정보 조회 -->
  <select id="readById" resultType="dev.mvc.member.MemberVO" parameterType="String">
    SELECT memberno, id, passwd, mname, tel, zipcode, address1, address2, mdate, grade,
                email, vname, job, file1, file1saved, thumb1, size1
    FROM member
    WHERE id = #{id}
  </select>  

  <!--  [58][Member] 회원 수정 처리 -->
  <update id="update" parameterType="dev.mvc.member.MemberVO">
    UPDATE member 
    SET mname=#{mname}, tel=#{tel}, zipcode=#{zipcode},
          address1=#{address1}, address2=#{address2},
           email=#{email}, vname=#{vname}, job=#{job}
    WHERE memberno=#{memberno}
  </update>     

  <!--  [59][Member] 회원 삭제 기능의 제작 -->
  <delete id="delete" parameterType="int">
    DELETE FROM member
    WHERE memberno=#{memberno}
  </delete>
  
  <!--  [60][Member] 회원 패스워드 변경 기능의 제작, Layer, HashMap 전달 
           현재 패스워드 검사 -->
  <select id="passwd_check" parameterType="HashMap" resultType="int">
    SELECT COUNT(memberno) as cnt
    FROM member
    WHERE memberno=#{memberno} AND passwd=#{passwd}
  </select>
  
  <!-- [60][Member] 회원 패스워드 변경 기능의 제작, Layer, HashMap 전달
         패스워드 변경 -->
  <update id="passwd_update" parameterType="HashMap">
    UPDATE member
    SET passwd=#{passwd}
    WHERE memberno=#{memberno}
  </update>    
  
  <!--[62][Member] index.do, home.do 제작, 로그인/로그아웃 기능의 제작, session, EL session 접근  -->
  <select id="login" resultType="int" parameterType="Map">
    SELECT COUNT(memberno) as cnt
    FROM member
    WHERE id=#{id} AND passwd=#{passwd}
  </select>  
    
</mapper> 