<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <!--
  - Mybatis Logic
  1) <mapper> dev.mvc.stugrp.StugrpDAOInter 패키지에 등록된 interface 명시
        패키지명과 인터페이스명은 실제로 존재해야함, Spring이 내부적으로 자동으로 interface를 구현 
  2) CRUD Matrix    
    CREATE : SQL 편집기로 직접 테이블 생성(erd 모델링 -> .sql export -> CREATE)
    CREATE : INSERT SQL 실행,  LIST : ORDER BY(다중),  READ : WHERE(단일)
    UPDATE : 수정, WHERE 절에 PK, DELETE : 삭제, WHERE 절에 PK
    id: Spring에서 호출시 사용
    parameterType: 전달받는 데이터 객체
    return: 등록한 레코드 갯수 리턴
    SQL선언시 ';'은 삭제
    #{}: 컬럼의 값
    #{name}: public String getName(){...
   3) LIST(다중)는  ArrayList 반환 / READ(단일)은 VO 반환
  --> 
<mapper namespace="dev.mvc.stugrp.StugrpDAOInter"> 


  <!-- [15][Stugrp] Stugrp 등록 기능 제작(INSERT~)   -->
  <insert id="create" parameterType="dev.mvc.stugrp.StugrpVO">
    INSERT INTO stugrp(stugrpname, stugrpex, seqno, rdate)
    VALUES(#{stugrpname}, #{stugrpex}, #{seqno}, NOW())
  </insert>
 
 
  <!-- [16][Stugrp] Stugrp 목록 출력 기능 제작(SELECT ~ FROM ~ ORDER BY ~), Bootstrap 적용, 등록 기능의 결합 -->
  <select id="list_stugrpno_asc" resultType="dev.mvc.stugrp.StugrpVO">
    SELECT stugrpno, stugrpname, stugrpex, seqno, rdate
    FROM stugrp
    ORDER BY stugrpno ASC
  </select>
  
  <!-- LIKE -->
 <select id="read1" resultType="dev.mvc.stugrp.StugrpVO">
    SELECT  stugrpno, stugrpname, stugrpex, seqno, rdate
    FROM stugrp
    WHERE stugrpname LIKE CONCAT('%', #{toeic}, '%')
  </select> 
  
  <!-- [22][Stugrp] 출력 순서별 목록 출력 기능 제작(SELECT ~ FROM ~ ORDER BY ~), redirect의 적용
    -  레코드 갯수 만큼 StugrpVO 객체를 만들어 ArrayList에 저장하여 리턴,
    - List<StugrpVO> list = new ArrayList<StugrpVO>(); 
  -->
  <select id="list_seqno_asc" resultType="dev.mvc.stugrp.StugrpVO">
    SELECT  stugrpno, stugrpname, stugrpex, seqno, rdate
    FROM stugrp
    ORDER BY seqno ASC
  </select>
 
  <!-- [17][Stugrp] Stugrp 조회, 수정폼 기능의 제작, JSP 수정과 목록의 결합  : 조회폼
         [19][Stugrp] Stugrp 삭제 폼 기능의 제작, JSP 삭제와 목록의 결합  : 삭제폼
     - 조회, id: read, 입력: stugrpno, 리턴: StugrpVO
     - SELECT 사용 시 READ(결과 레코드 한개)인 경우 VO가 Return
   -->
  <select id="read" resultType="dev.mvc.stugrp.StugrpVO" parameterType="int">
    SELECT  stugrpno, stugrpname, stugrpex, seqno, rdate
    FROM stugrp
    WHERE stugrpno=#{stugrpno}
  </select> 
  

  <!-- [18][Stugrp] Stugrp 수정 처리 기능의 제작(UPDATE ~ SET ~ WHERE ~) : 조회처리
     - 수정, id: update, 입력: StugrpVO, 리턴: int -->
  <update id="update" parameterType="dev.mvc.stugrp.StugrpVO">
    UPDATE stugrp
    SET stugrpname=#{stugrpname}, stugrpex=#{stugrpex}, seqno=#{seqno}
    WHERE stugrpno = #{stugrpno}
  </update>

  <!-- [20][Stugrp] Stugrp 삭제 처리 기능의 제작(DELETE FROM처~ WHERE ~)  : 삭제처리 
     - 삭제 처리, id=delete, 입력: PK, 리턴: 삭제된 갯수 int -->
  <delete id="delete" parameterType="int">
    DELETE FROM stugrp
    WHERE stugrpno=#{stugrpno}
  </delete>  

  <!-- [21][Stugrp] Stugrp 출력 순서의 변경 제작(UPDATE ~ SET ~ WHERE ~) 
     - 우선순위 상향 up 10 ▷ 1 -->
  <update id="update_seqno_up" parameterType="int">
    UPDATE stugrp
    SET seqno = seqno - 1
    WHERE stugrpno=#{stugrpno}
  </update>

  <!-- [21][Stugrp] Stugrp 출력 순서의 변경 제작(UPDATE ~ SET ~ WHERE ~)
     - 우선순위 하향 down 1 ▷ 10 --> 
  <update id="update_seqno_down" parameterType="int">
    UPDATE stugrp
    SET seqno = seqno + 1
    WHERE stugrpno=#{stugrpno}
  </update>  
   
</mapper> 